<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>anirudh24seven</title>
    <description>anirudh24seven&#39;s devlog
</description>
    <link>http://anirudh24seven.github.io//</link>
    <atom:link href="http://anirudh24seven.github.io//feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Wed, 04 Mar 2015 11:57:24 +0530</pubDate>
    <lastBuildDate>Wed, 04 Mar 2015 11:57:24 +0530</lastBuildDate>
    <generator>Jekyll v2.5.3</generator>
    
      <item>
        <title>An Android Developer&#39;s System Environment</title>
        <description>&lt;p&gt;I am an Android developer and in this post I will share my working environment.&lt;/p&gt;

&lt;h4 id=&quot;machine&quot;&gt;Machine&lt;/h4&gt;
&lt;p&gt;I use a Macbook Air 2014 model and it has been good enough for me. The battery life and the thin profile guarantee that I can use it anywhere I want.&lt;/p&gt;

&lt;h4 id=&quot;ide&quot;&gt;IDE&lt;/h4&gt;
&lt;p&gt;I have been using Android Studio as my IDE for the last one year and it has been great. It is better than Eclipse in almost every aspect: Speed, sensible shortcuts, clean UI and integration with Gradle.&lt;/p&gt;

&lt;h4 id=&quot;emulator&quot;&gt;Emulator&lt;/h4&gt;
&lt;p&gt;Whenever I need the Emulator (eg. lower versions of Android), I prefer Genymotion over the default Emulator. It is blazing fast, feels smooth and even has drag-and-drop support.&lt;/p&gt;

&lt;h4 id=&quot;device&quot;&gt;Device&lt;/h4&gt;
&lt;p&gt;I own a Nexus 5 running Lollipop. I connect to it with a USB cable but also debug over WiFi whenever I feel fancy.&lt;/p&gt;

&lt;h4 id=&quot;vcs&quot;&gt;VCS&lt;/h4&gt;
&lt;p&gt;I use Git in all my projects. Using a GUI for Git helps a lot for looking at branches and commit history. SourceTree has been the best tool in that regard. I also use GitX sometimes.&lt;/p&gt;

&lt;h4 id=&quot;terminal&quot;&gt;Terminal&lt;/h4&gt;
&lt;p&gt;I am a fan of top-down terminals that can be invoked with a global shortcut. The context-switch doesn’t feel heavy and this is very important to me. I used to have Yakuake on my Ubuntu machine and I wanted something similar on OS X. iTerm2 has been the best alternative on the Mac for me.&lt;/p&gt;

&lt;h4 id=&quot;browser&quot;&gt;Browser&lt;/h4&gt;
&lt;p&gt;I used to prefer Firefox because of Mozilla’s philosophy but Chrome looks and feels better. Chrome it is, for now.&lt;/p&gt;

&lt;h4 id=&quot;social&quot;&gt;Social&lt;/h4&gt;
&lt;p&gt;I am a very active user of Twitter and I use the TweetDeck app to keep myself updated. I also have a list of 100+ Android devs and columns in Tweetdeck are very useful to glance through all the lists I have.&lt;/p&gt;

&lt;h4 id=&quot;time-keeper&quot;&gt;Time keeper&lt;/h4&gt;
&lt;p&gt;It is easy to get distracted (especially with Twitter). I have tried out a few time-keeping tools and I have found RescueTime to be the best of them all. Check it out here: &lt;a href=&quot;http://rescuetime.com/&quot;&gt;http://rescuetime.com/&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;miscellaneous&quot;&gt;Miscellaneous&lt;/h3&gt;
&lt;p&gt;I used to use Thunderbird for my office email, chat with my team over Slack, etc. But I founnd them to be distracting if I kept them open all the time. Therefore, I set up email &amp;amp; Slack on my Android phone, used Pushbullet and started receiving notifications on my Mac, instead. I can choose to open, ignore or dismiss these notifications depending on my mood and this saves time tremendously. So, Pushbullet is a must for me.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Here is the summary:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Macbook Air 2014&lt;/li&gt;
  &lt;li&gt;Android Studio&lt;/li&gt;
  &lt;li&gt;Genymotion&lt;/li&gt;
  &lt;li&gt;Nexus 5&lt;/li&gt;
  &lt;li&gt;Chrome&lt;/li&gt;
  &lt;li&gt;SourceTree (and/or GitX)&lt;/li&gt;
  &lt;li&gt;iTerm2&lt;/li&gt;
  &lt;li&gt;TweetDeck&lt;/li&gt;
  &lt;li&gt;RescueTime&lt;/li&gt;
  &lt;li&gt;Pushbullet&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If you liked this post, you can
&lt;a href=&quot;https://twitter.com/intent/tweet?url=http://anirudh24seven.github.io//devlog/2015/03/04/an-android-developers-system-environment.html&amp;amp;text=An Android Developer&#39;s System Environment&amp;amp;via=anirudh24seven&quot; target=&quot;_blank&quot;&gt; share it with your followers&lt;/a&gt; 
or &lt;a href=&quot;https://twitter.com/anirudh24seven&quot;&gt; follow me on Twitter&lt;/a&gt;!&lt;/p&gt;

</description>
        <pubDate>Wed, 04 Mar 2015 16:18:00 +0530</pubDate>
        <link>http://anirudh24seven.github.io//devlog/2015/03/04/an-android-developers-system-environment.html</link>
        <guid isPermaLink="true">http://anirudh24seven.github.io//devlog/2015/03/04/an-android-developers-system-environment.html</guid>
        
        
        <category>devlog</category>
        
      </item>
    
      <item>
        <title>Robotium in Android Studio</title>
        <description>&lt;p&gt;I wanted to run UI tests within my Android app and I decided to go ahead with Robotium. I went through the project pages of &lt;a href=&quot;https://code.google.com/p/robotium/&quot;&gt;Robotium&lt;/a&gt; and &lt;a href=&quot;http://robotium.com/&quot;&gt;Robotium recorder&lt;/a&gt; and noticed that they seemed a little outdated. Most importantly, I couldn’t find information easily on how to run Robotium with Android Studio. Robotium Recorder, on the other hand, provided a plugin for Android Studio and you can find more info about it here: &lt;a href=&quot;http://robotium.com/pages/user-guide-android-studio&quot;&gt;robotium.com/pages/user-guide-android-studio&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;problem&quot;&gt;Problem:&lt;/h2&gt;
&lt;p&gt;Install and run Robotium in Android Studio.&lt;/p&gt;

&lt;h2 id=&quot;observations&quot;&gt;Observations:&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://gradleplease.appspot.com/&quot;&gt;Gradle, please&lt;/a&gt; provided a hit when I searched for Robotium. Robotium is indeed available as a Gradle dependency.&lt;/p&gt;

    &lt;pre&gt;&lt;code&gt; dependencies {
   compile &#39;com.jayway.android.robotium:robotium-solo:5.2.1&#39;
 }
&lt;/code&gt;&lt;/pre&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;I downloaded and installed Robotium Recorder out of curiosity. It worked perfectly. It recorded my actions, allowed me to run my recorded test and also save it. The generated file was a .class though, instead of .java. This meant that I couldn’t edit the test once it was generated. I understood that it would be a non-free feature and moved on.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;A Google search for integrating Robotium with Android Studio led me to this Stack Overflow question: &lt;a href=&quot;http://stackoverflow.com/questions/23275602/robotium-with-android-studio&quot;&gt;http://stackoverflow.com/questions/23275602/robotium-with-android-studio&lt;/a&gt;. But the answer wasn’t very helpful. So I decided to figure things out on my own and find a solution.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;experiments&quot;&gt;Experiments&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;I peered through the contents of the Robotium website more carefully and found that the project owners had provided PDF files for the Tutorials, instead of displaying them directly. But I was not still clear about creating tests in Android Studio.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Now that I wanted to know how to create tests in Android Studio, I searched for it specifically, I came upon this answer: &lt;a href=&quot;http://stackoverflow.com/a/20348909/568169&quot;&gt;http://stackoverflow.com/a/20348909/568169&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;I followed the steps in the above answer and created a test file. I then copy-pasted my recorded test case from Robotium Recorder and ran it. It ran successfully.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;summary&quot;&gt;Summary:&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;In your app module, create an &lt;strong&gt;androidTest/java&lt;/strong&gt; package under the &lt;strong&gt;src&lt;/strong&gt;  folder.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Open that module’s &lt;strong&gt;build.gradle&lt;/strong&gt; and add the below lines:&lt;/p&gt;

    &lt;pre&gt;&lt;code&gt; android {
      
   sourceSets {
        
     androidTest {
       java.srcDirs = [&#39;androidTest/java&#39;]
     }
        
   }
 }
&lt;/code&gt;&lt;/pre&gt;
  &lt;/li&gt;
  &lt;li&gt;Sync the Project. You should now see a folder named “java” in a green color.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Create your Robotium test file. For example, in a test file called ExampleTest.java, add the below code:&lt;/p&gt;

    &lt;pre&gt;&lt;code&gt; import android.test.ActivityInstrumentationTestCase2;
 import com.robotium.solo.Solo;

 @SuppressWarnings(&quot;rawtypes&quot;)
 public class ExampleTest extends ActivityInstrumentationTestCase2 {
   private Solo solo;
      
   private static final String LAUNCHER_ACTIVITY_FULL_CLASSNAME = &quot;com.example.ExampleActivty&quot;;
      
   private static Class&amp;lt;?&amp;gt; launcherActivityClass;
   static{
     try {
       launcherActivityClass = Class.forName(LAUNCHER_ACTIVITY_FULL_CLASSNAME);
       } catch (ClassNotFoundException e) {
         throw new RuntimeException(e);
       }
     }
        
     @SuppressWarnings(&quot;unchecked&quot;)
     public ExampleTestTest() throws ClassNotFoundException {
       super(launcherActivityClass);
     }
        
     public void setUp() throws Exception {
       super.setUp();
       solo = new Solo(getInstrumentation());
       getActivity();
     }
        
     @Override
     public void tearDown() throws Exception {
       solo.finishOpenedActivities();
       super.tearDown();
     }
        
     public void testRun() {
       //Wait for activity: &#39;com.example.ExampleActivty&#39;
       solo.waitForActivity(&quot;ExampleActivty&quot;, 2000);
       //Clear the EditText editText1
       solo.clearEditText((android.widget.EditText) solo.getView(&quot;editText1&quot;));
       solo.enterText((android.widget.EditText) solo.getView(&quot;editText1&quot;), &quot;This is an example text&quot;);
     }
   }
&lt;/code&gt;&lt;/pre&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If you liked this post, you can
&lt;a href=&quot;https://twitter.com/intent/tweet?url=http://anirudh24seven.github.io//devlog/2015/02/13/robotium-android-studio.html&amp;amp;text=Robotium in Android Studio&amp;amp;via=anirudh24seven&quot; target=&quot;_blank&quot;&gt; share it with your followers&lt;/a&gt; 
or &lt;a href=&quot;https://twitter.com/anirudh24seven&quot;&gt; follow me on Twitter&lt;/a&gt;!&lt;/p&gt;

</description>
        <pubDate>Fri, 13 Feb 2015 18:23:33 +0530</pubDate>
        <link>http://anirudh24seven.github.io//devlog/2015/02/13/robotium-android-studio.html</link>
        <guid isPermaLink="true">http://anirudh24seven.github.io//devlog/2015/02/13/robotium-android-studio.html</guid>
        
        
        <category>devlog</category>
        
      </item>
    
      <item>
        <title>iOS keyboard issue</title>
        <description>&lt;p&gt;I have been looking at &lt;a href=&quot;https://github.com/happyfoxinc/helpstack/issues/20&quot;&gt;this issue in HelpStack iOS&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;There seem to be 4 keyboard-related observers:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;UIKeyboardWillShowNotification&lt;/li&gt;
  &lt;li&gt;UIKeyboardDidShowNotification&lt;/li&gt;
  &lt;li&gt;UIKeyboardWillHideNotification&lt;/li&gt;
  &lt;li&gt;UIKeyboardDidHideNotification&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;However, I could find very little first-party documentation about these observers. Only found the below two:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.apple.com/library/ios/documentation/StringsTextFonts/Conceptual/TextAndWebiPhoneOS/KeyboardManagement/KeyboardManagement.html&quot;&gt;Text Programming Guide for iOS&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.apple.com/library/ios/documentation/UIKit/Reference/UIWindow_Class/index.html#//apple_ref/c/data/UIKeyboardWillShowNotification&quot;&gt;UIWindow Notifications&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Sadly, they don’t seem to be very explanatory.&lt;/p&gt;

&lt;p&gt;This &lt;a href=&quot;http://stackoverflow.com/questions/1126726/how-to-make-a-uitextfield-move-up-when-keyboard-is-present&quot;&gt;StackOverflow question&lt;/a&gt; seems to have a lot of responses. But most of them don’t seem to be the complete fix. (Go ahead. Upvote &lt;a href=&quot;http://stackoverflow.com/questions/1126726/how-to-make-a-uitextfield-move-up-when-keyboard-is-present&quot;&gt;the question&lt;/a&gt;.) Looks like Apple hasn’t provided enough documentation around this.&lt;/p&gt;

&lt;p&gt;So far, I have made whatever changes I could and created a pull request &lt;a href=&quot;https://github.com/happyfoxinc/helpstack/pull/33&quot;&gt;here&lt;/a&gt;. Planning to fix the iPad issue first. The source file for the iPad Ticket Detail ViewController is at &lt;a href=&quot;https://github.com/happyfoxinc/helpstack/blob/master/Classes/UI/HSTicketDetailViewControlleriPad.m&quot;&gt;/Classes/UI/HSTicketDetailViewControlleriPad.m&lt;/a&gt;. I am sure that spending more time with this file will help me understand.&lt;/p&gt;

&lt;p&gt;Hope to fix all the problems soon.&lt;/p&gt;
</description>
        <pubDate>Wed, 10 Dec 2014 02:30:00 +0530</pubDate>
        <link>http://anirudh24seven.github.io//devlog/2014/12/10/ios-keyboard-issue.html</link>
        <guid isPermaLink="true">http://anirudh24seven.github.io//devlog/2014/12/10/ios-keyboard-issue.html</guid>
        
        
        <category>devlog</category>
        
      </item>
    
      <item>
        <title>Welcome to my devlog</title>
        <description>&lt;p&gt;Almost every developer wants to maintain a devlog. There are a few difficulties though. Here are the top 2 in my mind.&lt;/p&gt;

&lt;h2 id=&quot;difficulties&quot;&gt;Difficulties:&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;Laziness&lt;/li&gt;
  &lt;li&gt;Devs usually can’t/don’t want to reveal their work because of legal/marketing issues&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;solutions&quot;&gt;Solutions:&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;I have resolved not to be lazy. Trust me.&lt;/li&gt;
  &lt;li&gt;I work on open source stuff. So I don’t think there’ll be issues.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I am an active Twitter user but it is not suited for large posts. First, I experimented with just echoing text into a log file.&lt;/p&gt;

&lt;p&gt;Example:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Welcome to my devlog!&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; 08-12-2014.log&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;However, this approach did not seem comfortable.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;I wanted timestamps and I didn’t want to do them manually&lt;/li&gt;
  &lt;li&gt;I wanted to maintain them online instead of limiting myself to a local machine&lt;/li&gt;
  &lt;li&gt;I wanted to learn something new on the way&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I remembered &lt;a href=&quot;https://pages.github.com/&quot;&gt;GitHub pages&lt;/a&gt; and that I had created one at &lt;a href=&quot;http://anirudh24seven.github.io/&quot;&gt;anirudh24seven.github.io&lt;/a&gt; long ago. I experimented around for a while and came upon &lt;a href=&quot;jekyllrb.com&quot;&gt;Jekyll&lt;/a&gt;. It seemed to be just what I wanted.&lt;/p&gt;

&lt;p&gt;So, here I am, serving up my first devlog with Jekyll and GitHub pages. Thanks GitHub!&lt;/p&gt;

&lt;p&gt;If you liked this post, you can
&lt;a href=&quot;https://twitter.com/intent/tweet?url=http://anirudh24seven.github.io//devlog/2014/12/08/welcome-to-my-dev-log.html&amp;amp;text=Welcome to my devlog&amp;amp;via=anirudh24seven&quot; target=&quot;_blank&quot;&gt; share it with your followers&lt;/a&gt; 
or &lt;a href=&quot;https://twitter.com/anirudh24seven&quot;&gt; follow me on Twitter&lt;/a&gt;!&lt;/p&gt;

</description>
        <pubDate>Mon, 08 Dec 2014 22:54:23 +0530</pubDate>
        <link>http://anirudh24seven.github.io//devlog/2014/12/08/welcome-to-my-dev-log.html</link>
        <guid isPermaLink="true">http://anirudh24seven.github.io//devlog/2014/12/08/welcome-to-my-dev-log.html</guid>
        
        
        <category>devlog</category>
        
      </item>
    
  </channel>
</rss>
